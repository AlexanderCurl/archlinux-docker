stages:
  - lint
  - rootfs
  - docker
  - test
  - release
  - publish

lint:
  stage: lint
  image: hadolint/hadolint:latest
  # DL3007: We use the latest tag for multistage build
  script: hadolint --ignore DL3007 --ignore DL3020 Dockerfile.template

rootfs:base:
  stage: rootfs
  image: archlinux:latest
  needs:
    - job: "lint"
  before_script:
    - echo "BUILD_DATE=$(date +%Y%m%d)" > build.env
  script:
    - pacman -Syu --noconfirm make devtools fakechroot fakeroot
    - make dockerfile-image-base
  artifacts:
    paths:
      - base.tar.xz
      - Dockerfile.base
    expire_in: 10m
    reports:
      dotenv: build.env

rootfs:base-devel:
  stage: rootfs
  image: archlinux:latest
  needs:
    - job: "lint"
  before_script:
    - echo "BUILD_DATE=$(date +%Y%m%d)" > build.env
  script:
    - pacman -Syu --noconfirm make devtools fakechroot fakeroot
    - make dockerfile-image-base-devel
  artifacts:
    paths:
      - base-devel.tar.xz
      - Dockerfile.base-devel
    expire_in: 10m
    reports:
      dotenv: build.env

docker:base:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: "rootfs:base"
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --whitelist-var-run="false"
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile.base
      --destination $CI_REGISTRY_IMAGE:base-$CI_COMMIT_REF_SLUG

docker:base-devel:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: "rootfs:base-devel"
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --whitelist-var-run="false"
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile.base-devel
      --destination $CI_REGISTRY_IMAGE:base-devel-$CI_COMMIT_REF_SLUG

test:base:
  stage: test
  image: $CI_REGISTRY_IMAGE:base-$CI_COMMIT_REF_SLUG
  needs:
    - job: "docker:base"
      artifacts: false
  script:
    - pacman -Sy
    - pacman -Qqk
    - pacman -Syu --noconfirm docker grep
    - docker -v
    - id -u http
    - locale | grep -q UTF-8

test:base-devel:
  stage: test
  image: $CI_REGISTRY_IMAGE:base-devel-$CI_COMMIT_REF_SLUG
  needs:
    - job: "docker:base-devel"
      artifacts: false
  script:
    - pacman -Sy
    - pacman -Qqk
    - pacman -Syu --noconfirm docker grep
    - docker -v
    - id -u http
    - locale | grep -q UTF-8
    - gcc -v
    - g++ -v
    - make -v

release:
  stage: release
  image: archlinux:latest
  only:
    refs:
      - master
      - add-base-devel-tags
    variables:
      - $SCHEDULED_PUBLISH == "TRUE"
  needs:
    - job: "test:base"
    - job: "test:base-devel"
  before_script:
    - pacman -Syu python-gitlab
  script:
    - python ci/release.py
  tags:
    - secure

# Publish base to the Arch Linux group namespace: https://hub.docker.com/r/archlinux/archlinux:base
# publish:org:base:
#   stage: publish
#   image:
#     name: gcr.io/go-containerregistry/crane:debug
#     entrypoint: [""]
#   needs:
#     - job: "test:base"
#       artifacts: true
#   tags:
#     - secure
#   variables:
#     GIT_STRATEGY: none
#   before_script:
#     - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#     - crane auth login -u $SOME_TECHNICAL_DOCKER_HUB_USER -p $SOME_TECHNICAL_DOCKER_HUB_PASSWORD archlinux/archlinux
#   script:
#     - crane cp $CI_REGISTRY_IMAGE:base-$CI_COMMIT_REF_SLUG archlinux/archlinux:base
#     - crane tag archlinux/archlinux:base latest
#     - crane tag archlinux/archlinux:base base-$BUILD_DATE
#   only:
#     variables:
#       - $SCHEDULED_PUBLISH == "TRUE"

# Publish base-devel to the Arch Linux group namespace: https://hub.docker.com/r/archlinux/archlinux:base-devel
# publish:org:base-devel:
#   stage: publish
#   image:
#     name: gcr.io/go-containerregistry/crane:debug
#     entrypoint: [""]
#   needs:
#     - job: "test:base-devel"
#       artifacts: true
#   tags:
#     - secure
#   variables:
#     GIT_STRATEGY: none
#   before_script:
#     - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#     - crane auth login -u $SOME_TECHNICAL_DOCKER_HUB_USER -p $SOME_TECHNICAL_DOCKER_HUB_PASSWORD archlinux/archlinux
#   script:
#     - crane cp $CI_REGISTRY_IMAGE:base-devel-$CI_COMMIT_REF_SLUG archlinux/archlinux:base-devel
#     - crane tag archlinux/archlinux:base-devel base-devel-$BUILD_DATE
#   only:
#     variables:
#       - $SCHEDULED_PUBLISH == "TRUE"

# Publish to the official Docker namespace: https://hub.docker.com/_/archlinux
# publish:official:
# TODO No idea right now how we're going to automatically do the official Docker Hub pull request
